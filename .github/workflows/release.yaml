name: Create release

on:
  workflow_dispatch:

jobs:
  run_tests:
    name: Run pre-release tests
    uses: ./.github/workflows/lint.yaml

  build_sdist:
    runs-on: ubuntu-latest
    needs: [run_tests]

    steps:
      - uses: actions/checkout@v3

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.8"

      - name: Build sdist
        run: |
          pdm build --no-wheel

      - name: Save version
        run: |
          pdm show pylsp_inlay_hints --version > version.txt

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v3
        with:
          name: version
          path: version.txt

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: "dist"

  build_wheels:
    runs-on: ${{ matrix.os }}
    needs: [run_tests]

    strategy:
      matrix:
        python-version: ["3.8"]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: true

      - name: Build wheel
        run: |
          pdm build --no-sdist

      - name: Upload whl artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: "dist/*"

  create_gh_release_and_publish_to_pypi:
    runs-on: ubuntu-latest
    needs: [build_sdist, build_wheels]
    permissions:
      contents: write

    steps:
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.12"

      - name: Download artifacts
        id: download
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: mv wheels and sdist
        run: |
          mkdir dist
          mv ${{steps.download.outputs.download-path}}/dist/* dist

      - name: Set version env var
        run: |
          echo "VERSION=$(cat ${{steps.download.outputs.download-path}}/version/version.txt | tr -d '\n')" >> "$GITHUB_ENV"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          files: |
            dist/*

      - name: Publish
        run: |
          pdm publish --no-build
        env:
          PDM_PUBLISH_USERNAME: __token__
          PDM_PUBLISH_PASSWORD: ${{ secrets.PYPI_TOKEN }}

